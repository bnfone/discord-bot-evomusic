# Workflow name: Publish Docker Image
name: Publish Docker Image

# Trigger the workflow on push events to the master and development branches, 
# and on published release events.
on:
  push:
    branches:
      - master
      - development
  release:
    types: [published]

jobs:
  build-and-push:
    # Use a self-hosted runner for building and pushing the Docker image.
    runs-on: self-hosted

    steps:
      # Step 1: Check out the repository code.
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Docker tags based on the event type or branch.
      - name: Set up Docker tags
        id: vars
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "TAGS=ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:${{ github.event.release.tag_name }},ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:latest" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/development" ]; then
            COMMIT_HASH=${GITHUB_SHA:0:7}
            echo "TAGS=ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:development-${COMMIT_HASH},ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:development" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "TAGS=ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:latest" >> $GITHUB_ENV
          fi

      # Step 3: Log in to the GitHub Container Registry (GHCR).
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Set up QEMU for multi-architecture emulation.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # Step 5: Set up Docker Buildx, which is used to build multi-architecture images.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Build and push the Docker image using the tags defined earlier.
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .                            # Use the current directory as the build context.
          push: true                            # Push the built image to the registry.
          tags: ${{ env.TAGS }}                 # Use the tags set in the previous step.
          platforms: linux/amd64,linux/arm64    # Build for both amd64 and arm64 architectures.